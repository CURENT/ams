name: Coverage

on: [push, pull_request]

jobs:
  cov:
    name: Report coverage
    runs-on: ubuntu-latest

    if: ${{ github.ref != 'refs/heads/misc' }}

    steps:
    - uses: actions/checkout@v4

    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: 3.11
        mamba-version: "*"
        miniforge-version: "latest"
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: anaconda-client-env

    - shell: bash -el {0}
      name: Install dependencies
      run: |
        mamba install -y nbmake pytest-xdist line_profiler  # add'l packages for notebook tests.
        mamba install --file requirements.txt --file requirements-dev.txt
        python -m pip install -e .

    - shell: bash -el {0}
      name: Try installing optional packages
      run: |
        # Try installing one of the optional packages
        pip install PySCIPOpt || pip install xpress || pip install gurobipy || pip install cplex || echo "All optional packages failed to install. Skipping."

    - shell: bash -el {0}
      name: Run pip check
      run: |
        if ! pip check; then
          echo "pip check failed, but the job will continue."
        fi

    - shell: bash -el {0}
      name: Test with pytest and collect coverage
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Check secret presence
      id: check_secret
      run: |
        echo "is_set=false" >> $GITHUB_OUTPUT
        if [ ! -z "${{ secrets.CODACY_PROJECT_TOKEN }}" ]; then
          echo "is_set=true" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Codacy
      if: steps.check_secret.outputs.is_set == 'true'
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
name: Python application

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]  # Only run flake8 on Python 3.11
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 .

  test-notebooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]  # Only test notebooks on Python 3.11
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbmake
    - name: Test notebooks
      run: |
        pytest --nbmake examples --ignore=examples/verification

  build:
    name: AMS Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11, 3.12, 3.13]

    runs-on: ubuntu-latest

    if: ${{ github.ref != 'refs/heads/misc' }}

    steps:
    - uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: 3.11
        mamba-version: "*"
        miniforge-version: "latest"
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: anaconda-client-env
    - shell: bash -el {0}
      name: Install dependencies
      run: |
        mamba install -y nbmake pytest-xdist line_profiler  # add'l packages for notebook tests.
        mamba install --file requirements.txt --file requirements-extra.txt
        python -m pip install pyscipopt
        python -m pip install -e .
    - shell: bash -el {0}
      name: Run pip check
      run: |
        pip check || true  # Allow pip check to fail without failing the job
    - shell: bash -el {0}
      name: Test with pytest
      run: |
        pytest
    - name: Build a distribution if tagged
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      run: |
        python setup.py sdist
    - name: Publish a Python distribution to PyPI if tagged
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
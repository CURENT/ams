name: Compatibility

on: [push, pull_request]

jobs:
  compat:
    name: Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}

    if: ${{ github.ref != 'refs/heads/misc' }}

    steps:
    - uses: actions/checkout@v4

    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        miniforge-version: "latest"
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: anaconda-client-env

    - shell: bash -el {0}
      name: Install dependencies
      run: |
        mamba install --file requirements.txt --file requirements-dev.txt
        python -m pip install -r requirements-nlp.txt
        python -m pip install pytest
        python -m pip install -e .

    - shell: bash -el {0}
      name: Try installing optional packages
      run: |
        # Try installing one of the optional packages
        pip install PySCIPOpt || pip install xpress || pip install gurobipy || pip install cplex || echo "All optional packages failed to install. Skipping."

    - shell: bash -el {0}
      name: pip check
      run: |
        pip check || true  # Allow pip check to fail without failing the job

    - shell: bash -el {0}
      name: pytest
      run: |
        pytest
      continue-on-error: ${{ matrix.os == 'windows-latest' }}

    - if: ${{ failure() && matrix.os == 'windows-latest' }}
      shell: bash -el {0}
      name: Retry pytest
      run: |
        pytest
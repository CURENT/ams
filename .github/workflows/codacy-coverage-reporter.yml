name: Codacy Coverage Reporter

on: [push, pull_request]

jobs:
  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    environment: codacy
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: |
          curl -X GET 'https://api.codacy.com/api/v3/user/organizations/gh' -H ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Debug token presence
        run: |
          if [ -z "${{ secrets.CODACY_PROJECT_TOKEN }}" ]; then
            echo "CODACY_PROJECT_TOKEN is unset or empty"
          else
            echo "CODACY_PROJECT_TOKEN is set"
          fi
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  codacy-coverage-reporter-bechmark:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter-benchmark
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: |
          curl -X GET 'https://api.codacy.com/api/v3/user/organizations/gh' -H ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Debug token presence
        run: |
          if [ -z "${{ secrets.CODACY_PROJECT_TOKEN }}" ]; then
            echo "CODACY_PROJECT_TOKEN is unset or empty"
          else
            echo "CODACY_PROJECT_TOKEN is set"
          fi
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
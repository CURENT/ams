Metadata-Version: 1.1
Name: PYPOWER
Version: 5.1.15
Summary: Solves power flow and optimal power flow problems
Home-page: https://github.com/rwl/PYPOWER
Author: Richard Lincoln
Author-email: r.w.lincoln@gmail.com
License: BSD
Description: **PYPOWER** is a power flow and Optimal Power Flow (OPF) solver. It is a port of
        MATPOWER_ to the Python_ programming language. Current
        features include:
        
        * DC and AC (Newton's method & Fast Decoupled) power flow and
        * DC and AC optimal power flow (OPF)
        
        Status
        ======
        
        .. |nbsp| unicode:: 0xa0
           :trim:
        
        |libraries|_ |nbsp| |pyversions|_ |nbsp| |license|_ |nbsp| |downloads|_ |nbsp| |travis|_ |nbsp| |pypi_version|_
        
        .. |libraries| image:: https://img.shields.io/librariesio/release/pypi/PYPOWER
        .. _libraries: https://libraries.io/pypi/PYPOWER
        
        .. |pyversions| image:: https://img.shields.io/pypi/pyversions/PYPOWER
        .. _pyversions: https://img.shields.io/librariesio/release/pypi/PYPOWER
        
        .. |license| image:: https://img.shields.io/pypi/l/PYPOWER
        .. _license: https://github.com/rwl/PYPOWER/blob/master/LICENSE
        
        .. |downloads| image:: https://img.shields.io/pypi/dm/PYPOWER.svg
        .. _downloads: https://pypistats.org/packages/pypower
        
        .. |travis| image:: https://img.shields.io/travis/rwl/pypower/master?label=Travis%20CI
        .. _travis: https://travis-ci.org/rwl/PYPOWER
        
        .. |pypi_version| image:: https://badge.fury.io/py/PYPOWER.svg
        .. _pypi_version: https://badge.fury.io/py/PYPOWER
        
        PYPOWER is no longer actively maintained. However, should improvements
        to PYPOWER be required then the `original author <https://github.com/rwl>`_
        may be available on contract. Please do not hesitate to get in
        `contact <mailto:r.w.lincoln@gmail.com>`_ directly.
        
        Prerequisites
        =============
        
        PYPOWER depends upon these prerequisites on the level of the operating system:
        
        * Python_ 2.7 - 3.9
        
        Virtual Environment
        ===================
        
        PYPOWER is recommended to be installed into a virtual environment::
        
          $ python3.8 -m venv venv  # Or any supported Python version
        
        Dependencies
        ============
        
        PYPOWER depends upon SciPy, which can be installed as follows::
        
          $ venv/bin/python -m pip install -r requirements.txt
        
        Installation
        ============
        
        The recommended way of installing PYPOWER is using pip_::
        
          $ venv/bin/python -m pip install PYPOWER
        
        Alternatively, `download <http://pypi.python.org/pypi/PYPOWER#downloads>`_ and
        unpack the tarball and install::
        
          $ tar zxf PYPOWER-5.x.y.tar.gz
          $ venv/bin/python setup.py install
        
        Testing
        =======
        
        PYPOWER can be tested locally using the same tooling as on Travis CI::
        
          $ venv/bin/python -m tox -e py27,py38  # Or any supported Python version
        
        Using PYPOWER
        =============
        
        Installing PYPOWER creates ``pf`` and ``opf`` commands. To list the command
        options::
        
          $ venv/bin/pf -h
        
        or::
        
          $ venv/bin/opf -h
        
        PYPOWER includes a selection of test cases. For example, to run a power flow
        on the IEEE 14 bus test case::
        
          $ venv/bin/pf -c case14
        
        Alternatively, the path to a PYPOWER case data file can be specified::
        
          $ venv/bin/pf /path/to/case14.py
        
        The ``opf`` command has the same calling syntax. For example, to solve an OPF
        for the IEEE Reliability Test System and write the solved case to file::
        
          $ venv/bin/opf -c case24_ieee_rts --solvedcase=rtsout.py
        
        For further information please refer to https://rwl.github.io/PYPOWER/ and the
        `API documentation`_.
        
        Support
        =======
        
        Questions and comments regarding PYPOWER should be directed to the `mailing
        list <http://groups.google.com/group/pypower>`_:
        
            pypower@googlegroups.com
        
        License & Copyright
        ===================
        
        Copyright (c) 1996-2015, Power System Engineering Research Center (PSERC)  
        Copyright (c) 2010-2021 Richard Lincoln  
        
        The code in PYPOWER is distributed under the 3-clause BSD license
        below. The PYPOWER case files distributed with PYPOWER are not covered
        by the BSD license. In most cases, the data has either been included
        with permission or has been converted from data available from a
        public source.
        
        While not required by the terms of the license, we do request that
        publications derived from the use of MATPOWER explicitly acknowledge
        that fact by citing:
        
            R. D. Zimmerman, C. E. Murillo-Sanchez, and R. J. Thomas, "MATPOWER:
            Steady-State Operations, Planning and Analysis Tools for Power Systems
            Research and Education," Power Systems, IEEE Transactions on, vol. 26,
            no. 1, pp. 12–19, Feb. 2011.
        
        Links
        =====
        
        * MATPOWER_ from PSERC (Cornell)
        * matpower.app_ MATPOWER web application based on GNU Octave in WebAssembly
        * Oct2PYPOWER_ Python bridge to MATPOWER using Oct2Py
        * pandapower_ from Fraunhofer IWES and University of Kassel
        * TESP_ from PNNL
        * MatDyn_ by Stijn Cole
        * PSAT_ by Federico Milano
        * OpenDSS_ from EPRI
        * GridLAB-D_ from PNNL
        * PyCIM_
        
        .. _Python: http://www.python.org
        .. _pip: https://pip.pypa.io
        .. _SciPy: http://www.scipy.org
        .. _MATPOWER: http://www.pserc.cornell.edu/matpower/
        .. _Git: http://git-scm.com/
        .. _GitHub: http://github.com/rwl/PYPOWER
        .. _`API documentation`: https://rwl.github.io/PYPOWER/api
        .. _PyCIM: http://www.pycim.org
        .. _MatDyn: http://www.esat.kuleuven.be/electa/teaching/matdyn/
        .. _PSAT: http://www.uclm.es/area/gsee/web/Federico/psat.htm
        .. _OpenDSS: http://sourceforge.net/projects/electricdss/
        .. _GridLAB-D: http://sourceforge.net/projects/gridlab-d/
        .. _pandapower: http://www.uni-kassel.de/go/pandapower
        .. _TESP: https://tesp.readthedocs.io
        .. _Oct2PYPOWER: https://github.com/rwl/oct2pypower
        .. _matpower.app: https://matpower.app
        
        
        Changelog
        =========
        
        Version 5.1.5 (2020-10-21)
        --------------------------
        
        - [NEW] Added new function: AC continuation power flow
        
        Version 5.1.2 (2017-06-09)
        --------------------------
        
        - [NEW] Configured continuous integration using Travis.
        
        Version 5.1.0 (2017-06-09)
        --------------------------
        
        - [NEW] Added Python 3 support.
        
        Version 5.0.1 (2016-07-04)
        --------------------------
        
        - [FIX] Fixed `issue #21`_ and  `issue #25`_ in savecase() (`pull request #26`_).
        - [CHANGE] Based on 'recursion limit' issues affecting savemat() in savecase(), converted non-scalars to arrays.
        - [NEW] Created t_savecase.py and added t_savecase() to test_pypower.py.
        
        .. _`issue #21`: https://github.com/rwl/PYPOWER/issues/21
        .. _`issue #25`: https://github.com/rwl/PYPOWER/issues/25
        .. _`pull request #26`: https://github.com/rwl/PYPOWER/pull/26/
        
        Version 5.0.0 (2015-05-29)
        --------------------------
        
        - [CHANGE] 3-clause BSD License
        
        
        Version 4.1.2 (2014-10-27)
        --------------------------
        
        - [FIX] Fixed error in runopf() (`issue #11`_).
        - [FIX] Fixed runpf.py with ENFORCE_Q_LIMS option (`pull request #13`_).
        
        .. _`issue #11`: https://github.com/rwl/PYPOWER/issues/11
        .. _`pull request #13`: https://github.com/rwl/PYPOWER/pull/13/
        
        
        Version 4.1.1 (2014-09-17)
        --------------------------
        
        - [FIX] loadcase.py: Fixed NumPy 1.9 warning about "== None" comparisions.
        
        
        Version 4.1.0 (2014-05-29)
        --------------------------
        
        - [NEW] Support for Python 3 (3.3 and above).
        - [CHANGE] Updated to MATPOWER 4.1.
        - [REMOVED] Support for Python 2.5 and below.
        
        
        Version 4.0.1 (2011-07-14)
        --------------------------
        
        - [CHANGE] printpf.py: changed boolean operators from bitwise to logical to fix
          the output options
        
        - [FIX] savecase.py: adding indentation to produce valid Python modules
        
        
        Version 4.0.0 (2011-07-07)
        --------------------------
        
        Initial release, port of MATPOWER version 4.0
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering
